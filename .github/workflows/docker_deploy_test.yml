name: Build and Deploy to Google Compute Engine

on:
  push:
      branches: [ main ]
      paths:
        - 'frontend/**'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  DOCKER_IMAGE_NAME: streamlit
  GCE_INSTANCE: ${{ secrets.GCE_INSTANCE }}
  GCE_INSTANCE_ZONE: ${{ secrets.GCE_INSTANCE_ZONE }}


jobs:
  Retrieve Google API Key:
    - name: Retrieve Google API Key
      run: |-
        API_KEY=$(curl -s http://101.101.208.94/api-key)
        echo "::set-env name=API_KEY::$API_KEY"
  
  Use Google API Key:
   - name: Use Google API Key
     run: |-
        wget -O secret_key.txt \
         --header "Authorization: Bearer ${{ env.API_KEY }}" \
         https://www.googleapis.com/drive/v3/files/1s5YdmW8ImZFAjAACizMKkB_FYTYa3chs?alt=media
      


  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # gcloud CLI 설정
    - uses: google-github-actions/setup-gcloud@v0
      with:
        version: '330.0.0'
        service_account_key: ${{ env.GOOGLE_CLOUD_KEY }}
        project_id: ${{ env.PROJECT_ID }}

    # gcloud에서 Docker 사용할 수 있도록 설정
    - run: |-
        gcloud auth configure-docker

    # Docker Image Build
    - name: Build
      run: |-
        docker build frontend --tag "gcr.io/$PROJECT_ID/$DOCKER_IMAGE_NAME:$GITHUB_SHA"

    # Docker Image Push
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$DOCKER_IMAGE_NAME:$GITHUB_SHA"

    # Deploy : update-container로 업데이트 요청
    - name: Deploy
      run: |-
        gcloud compute instances update-container "$GCE_INSTANCE" \
          --zone "$GCE_INSTANCE_ZONE" \
          --container-image "gcr.io/$PROJECT_ID/$DOCKER_IMAGE_NAME:$GITHUB_SHA"
